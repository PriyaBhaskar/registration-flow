!function(){"use strict";function MainController($scope,appConstants,registerService){function showSuccessNotification(){console.log("success"),vm.register.success=!0}function showErrorNotification(error){console.log("false"),error.status>=500&&error.status<=599&&(console.log("false"),vm.register.error=!0)}var vm=this;vm.register={},vm.submitUserRegistration=function(userRegisterForm){var formdata={email:userRegisterForm.email.value,password:userRegisterForm.userpassword.value};registerService.registerUser(formdata).then(showSuccessNotification)["catch"](showErrorNotification)}}angular.module("app.tnt-registration-flow",[]).component("tntRegistrationFlow",{bindings:{},templateUrl:"tnt-registration-flow/module.html",controller:MainController}),MainController.$inject=["$scope","appConstants","registerService"]}(),angular.module("app.tnt-registration-flow").constant("appConstants",{registerApi:"http://localhost:9000/register"}),function(){"use strict";function FormPasswordValidator(){return{require:"ngModel",scope:{},link:function(scope,elm,attrs,ctrl){var isValid=!0;ctrl.$$scope.isValid=isValid,ctrl.$validators.userpassword=function(modelValue,viewValue){var passwordLength=modelValue?modelValue.length:0;ctrl.$$scope.validate={};var isUppercase=function(){for(var i=0;passwordLength>i;)return modelValue.charAt(i)===modelValue.charAt(i).toUpperCase()?(ctrl.$$scope.validate.isUppercase=!0,!0):(ctrl.$$scope.validate.isUppercase=!1,!1)},isOrdered=function(){for(var i=0;passwordLength>i;i++){var temp=modelValue.charCodeAt(i);if(temp+1===modelValue.charCodeAt(i+1)&&temp+2===modelValue.charCodeAt(i+2))return ctrl.$$scope.validate.isOrdered=!0,!0}return ctrl.$$scope.validate.isOrdered=!1,!1},isOverlapping=function(){var match=modelValue.match(/(\w)\1+/gi);return match&&2===match.length?(ctrl.$$scope.validate.isOverlapping=!0,!0):(ctrl.$$scope.validate.isOverlapping=!1,!1)},islength=function(){return ctrl.$$scope.validate.islength=!ctrl.$isEmpty(modelValue)&&32>=passwordLength,ctrl.$$scope.validate.islength},isIgnoreSelected=function(){return ctrl.$$scope.validate.isIgnoreSelected=-1===modelValue.search(/i|o|l/),ctrl.$$scope.validate.isIgnoreSelected};return isValid=islength()&&!isUppercase()&&isIgnoreSelected()&&isOverlapping()&&isOrdered(),ctrl.$setValidity("userpassword",isValid),isValid}}}}angular.module("app.tnt-registration-flow").directive("tntFormValidator",FormPasswordValidator)}(),function(){"use strict";function abortRequestService(){function abort(id,abortHttpRequestList){function abortRequestFn(promise,i){promise.resolve(),abortHttpRequestList.splice(i,1)}angular.isDefined(id)?abortRequestFn(abortHttpRequestList[id],id):angular.forEach(abortHttpRequestList,abortRequestFn)}return{remove:abort}}angular.module("app.tnt-registration-flow").factory("abortRequestService",abortRequestService),abortRequestService.$inject=[]}(),function(){"use strict";function registerService($http,$q,appConstants,abortRequestService){function registerUser(formdata){var response=$q.defer(),abortHttpRequest=$q.defer(),settings={method:"POST",data:formdata,url:appConstants.registerApi,timeout:abortHttpRequest.promise},id=abortHttpRequestList.length;return abortHttpRequestList.push(abortHttpRequest),$http(settings).then(function(data){response.resolve(data)},function(error){response.reject(error)})["finally"](function(){abortRequestService.remove(id,abortHttpRequestList)}),response.promise}var abortHttpRequestList=[];return{registerUser:registerUser}}angular.module("app.tnt-registration-flow").factory("registerService",registerService),registerService.$inject=["$http","$q","appConstants","abortRequestService"]}(),angular.module("app.tnt-registration-flow").run(["$templateCache",function($templateCache){"use strict";$templateCache.put("tnt-registration-flow/module.html",'<section class="tnt-registration-flow">\r\n	<form novalidate id="userRegisterForm" name="userRegisterForm" class="user-register-form" ng-submit="!userRegisterForm.$pristine &&  userRegisterForm.$valid && $ctrl.submitUserRegistration(userRegisterForm)">\r\n		<div class="form-enter-desc">Please enter your details</div>\r\n		<fieldset class="form-data">\r\n			<input class="input-details" type="email" name="email" ng-model="user.email" placeholder="Email"/>\r\n			<span ng-if="userRegisterForm.email.$invalid" class="error-msg">Please enter a valid email id</span>\r\n			<input class="input-details" type="password" name="userpassword" ng-model="user.password" placeholder="New password" required tnt-form-validator/>\r\n			<div ng-if="!userRegisterForm.userpassword.$pristine && userRegisterForm.userpassword.$invalid">\r\n				<span class="error-msg">Please enter a valid password. </span>\r\n					<ul class="password-rules-msg">Your password should meet the following rules:\r\n						<li ng-if="!validate.isOrdered">Passwords must include one increasing straight of at least three letters,\r\n							like abc, bcd, cde, and so on, up to xyz. They cannot skip letters; abd doesn\'t\r\n							count.</li>\r\n						<li ng-if="!validate.isIgnoreSelected">Passwords may not contain the letters i, o, or l, as these letters can be mistaken\r\n							for other characters and are therefore confusing.\r\n						</li>\r\n						<li ng-if="!validate.isOverlapping">Passwords must contain at least two non-overlapping pairs of letters,\r\n							like aa, bb, or zz.</li>\r\n						<li ng-if="!validate.islength">Passwords cannot be longer than 32 characters.</li>\r\n						<li ng-if="validate.isUppercase">Passwords can only contain lower case alphabetic characters.</li>\r\n					</ul>\r\n			</div>\r\n			<input class="input-details" type="password" name="confirmpassword" ng-model="user.confirmpassword" placeholder="Confirm New password" required ng-pattern="{{user.password}}" tnt-form-validator/>\r\n			<span ng-if="!userRegisterForm.confirmpassword.$pristine && userRegisterForm.confirmpassword.$invalid" class="error-msg">Please confirm your password correctly</span>\r\n		</fieldset>\r\n		<div class="input-agreement">\r\n			<input type="checkbox" name="signInAgreement" value="true">I agree to TNT\'s <a class="signInLink" href="http://www.tnt.com/express/en_gb/site/home/terms-conditions.html">terms and condition</a>\r\n		</div>\r\n		<button form="userRegisterForm" type="submit" class="user-register-submit" ng-class="userRegisterForm.$valid ? \'enable-submit\':\'disable-submit\'" value="Submit">Next</button>\r\n		<div class="errors">\r\n			<div ng-if="$ctrl.register.success" class="success-msg">You have received an e-mail to confirm your registration.</div>\r\n			<div ng-if="$ctrl.register.error" class="error-msg">Something went wrong. Please try again later.</div>\r\n		</div>\r\n	</form>\r\n</section>')}]);